{"ast":null,"code":"import _classCallCheck from \"/Users/macbook/Desktop/drive-download-20220616T015757Z-001/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/macbook/Desktop/drive-download-20220616T015757Z-001/front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n// login / logout / register 역할\nimport http from \"@/http-auth\";\n\nvar AuthService = /*#__PURE__*/function () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n  }\n\n  _createClass(AuthService, [{\n    key: \"login\",\n    value: // login methods(function)\n    function login(user) {\n      // springboot 서버로 로그인 정보(이름, 암호) 확인 요청\n      return http.post(\"/signin\", {\n        username: user.username,\n        password: user.password\n      }) // 성공하면 then으로 결과가 들어옴\n      .then(function (response) {\n        console.log(response.data), console.log(\"accessToken\" + response.data.token); // springboot 서버에서 전송한 웹 토큰을 받았으면\n        // 로컬스토리지에 user라는 이름으로 저장\n\n        if (response.data.token) {\n          // JSON.stringify() : JSON 객체를 문자열로 변환\n          // JSON.parse() : 문자열을 JSON 객체로 변환\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n    } // logout methods(function)\n    // JWT(Java Web Token)를 로컬 저장소(localStorage)에서 제거\n\n  }, {\n    key: \"logout\",\n    value: function logout(user) {\n      localStorage.removeItem(\"user\");\n    } // POST방식 : springBoot 서버에 회원 가입을 요청 (insert)\n    // 영문 사이트 : signup (회원가입)\n\n  }, {\n    key: \"register\",\n    value: function register(user) {\n      return http.post(\"/signup\", {\n        username: user.username,\n        email: user.email,\n        password: user.password\n      });\n    }\n  }]);\n\n  return AuthService;\n}();\n\nexport default new AuthService();","map":{"version":3,"names":["http","AuthService","user","post","username","password","then","response","console","log","data","token","localStorage","setItem","JSON","stringify","removeItem","email"],"sources":["/Users/macbook/Desktop/drive-download-20220616T015757Z-001/front-end/src/services/auth/AuthService.js"],"sourcesContent":["// login / logout / register 역할\nimport http from \"@/http-auth\";\n\nclass AuthService {\n  // login methods(function)\n  login(user) {\n    // springboot 서버로 로그인 정보(이름, 암호) 확인 요청\n    return (\n      http\n        .post(\"/signin\", {\n          username: user.username,\n          password: user.password,\n        })\n        // 성공하면 then으로 결과가 들어옴\n        .then((response) => {\n          console.log(response.data),\n            console.log(\"accessToken\" + response.data.token);\n\n          // springboot 서버에서 전송한 웹 토큰을 받았으면\n          // 로컬스토리지에 user라는 이름으로 저장\n          if (response.data.token) {\n            // JSON.stringify() : JSON 객체를 문자열로 변환\n            // JSON.parse() : 문자열을 JSON 객체로 변환\n            localStorage.setItem(\"user\", JSON.stringify(response.data));\n          }\n          return response.data;\n        })\n    );\n  }\n  // logout methods(function)\n  // JWT(Java Web Token)를 로컬 저장소(localStorage)에서 제거\n  logout(user) {\n    localStorage.removeItem(\"user\");\n  }\n\n  // POST방식 : springBoot 서버에 회원 가입을 요청 (insert)\n  // 영문 사이트 : signup (회원가입)\n  register(user) {\n    return http.post(\"/signup\", {\n      username: user.username,\n      email: user.email,\n      password: user.password,\n    });\n  }\n}\n\nexport default new AuthService();\n"],"mappings":";;;AAAA;AACA,OAAOA,IAAP,MAAiB,aAAjB;;IAEMC,W;;;;;;;WACJ;IACA,eAAMC,IAAN,EAAY;MACV;MACA,OACEF,IAAI,CACDG,IADH,CACQ,SADR,EACmB;QACfC,QAAQ,EAAEF,IAAI,CAACE,QADA;QAEfC,QAAQ,EAAEH,IAAI,CAACG;MAFA,CADnB,EAKE;MALF,CAMGC,IANH,CAMQ,UAACC,QAAD,EAAc;QAClBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,GACEF,OAAO,CAACC,GAAR,CAAY,gBAAgBF,QAAQ,CAACG,IAAT,CAAcC,KAA1C,CADF,CADkB,CAIlB;QACA;;QACA,IAAIJ,QAAQ,CAACG,IAAT,CAAcC,KAAlB,EAAyB;UACvB;UACA;UACAC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACG,IAAxB,CAA7B;QACD;;QACD,OAAOH,QAAQ,CAACG,IAAhB;MACD,CAlBH,CADF;IAqBD,C,CACD;IACA;;;;WACA,gBAAOR,IAAP,EAAa;MACXU,YAAY,CAACI,UAAb,CAAwB,MAAxB;IACD,C,CAED;IACA;;;;WACA,kBAASd,IAAT,EAAe;MACb,OAAOF,IAAI,CAACG,IAAL,CAAU,SAAV,EAAqB;QAC1BC,QAAQ,EAAEF,IAAI,CAACE,QADW;QAE1Ba,KAAK,EAAEf,IAAI,CAACe,KAFc;QAG1BZ,QAAQ,EAAEH,IAAI,CAACG;MAHW,CAArB,CAAP;IAKD;;;;;;AAGH,eAAe,IAAIJ,WAAJ,EAAf"},"metadata":{},"sourceType":"module"}
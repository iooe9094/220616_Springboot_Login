{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  // html에서 변수처럼 호출 : 뒤에 () 붙이면 안된다 ex) currentUser\n  // 속도는 computed 빠름\n  computed: {\n    currentUser: function currentUser() {\n      // 공유저장소의 전역변수 (공유변수 : user)\n      // 자동으로 로그인 되었으면 loggedIn = true\n      // 아니면 loggedIn = false, user객체 = null\n      // return this.$route.auth.user;\n      return true; // 테스트용\n    }\n  },\n  // html에서 함수처럼 호출 : 뒤에 () 붙음 ex) logOut(), logOut\n  methods: {\n    logOut: function logOut() {\n      // dispatch 호출하는 메소드 : actions 있는 메소드를 호출\n      this.$store.dispatch(\"auth/logout\"); // 로그아웃 후 이동할 페이지 지정\n\n      this.$router.push(\"/login\");\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;EACA;EACA;EACAA;IACAC,WADA,yBACA;MACA;MACA;MACA;MACA;MACA,YALA,CAKA;IACA;EAPA,CAHA;EAYA;EACAC;IACAC,MADA,oBACA;MACA;MACA,oCAFA,CAGA;;MACA;IACA;EANA;AAbA","names":["computed","currentUser","methods","logOut"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div>\n    <nav\n      class=\"navbar navbar-expand-lg navbar-light fixed-top small\"\n      id=\"mainNav\"\n    >\n      <div class=\"container\">\n        <a class=\"navbar-brand\" href=\"#\">\n          <router-link to=\"/home\">\n            <img width=\"50\" height=\"50\" alt=\"\" src=\"#\" />\n          </router-link>\n        </a>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavDropdown\"\n          aria-controls=\"navbarNavDropdown\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n          <ul class=\"navbar-nav\">\n            <!-- dropdown #1 시작 -->\n            <li class=\"nav-item dropdown mr-4\">\n              <a\n                class=\"nav-link dropdown-toggle mr-5\"\n                href=\"@/img/bg-callout.jpg\"\n                id=\"navbarDropdownMenuLink\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                About\n              </a>\n              <div\n                class=\"dropdown-menu\"\n                aria-labelledby=\"navbarDropdownMenuLink\"\n              >\n                <router-link to=\"/\" class=\"dropdown-item\">\n                  나의 메뉴\n                </router-link>\n                <router-link to=\"/complain\" class=\"dropdown-item\">\n                  Complain\n                </router-link>\n              </div>\n\n              <!-- 로그인 태그 추가 -->\n              <div v-if=\"currentUser\" class=\"navbar-nav ml-auto\">\n                <router-link to=\"/profile\" class=\"nav-link\">\n                  <!-- 웹 아이콘 추가 : user -->\n                  <font-awesome-icon icon=\"user\"></font-awesome-icon>\n                  {{ currentUser.username }}\n                </router-link>\n              </div>\n            </li>\n            <li class=\"nav-item\">\n              <!-- @click.prevent: a태그의 기능을 막는 역할 -->\n              <a href @click.prevent=\"logOut\" class=\"nav-link\">\n                <!-- 웹 아이콘 추가 : logOut -->\n                <font-awesome-icon icon=\"sign-out-alt\"></font-awesome-icon>\n                LogOut\n              </a>\n            </li>\n            <!-- dropdown #1 끝 -->\n          </ul>\n        </div>\n      </div>\n    </nav>\n  </div>\n</template>\n\n<script>\nexport default {\n  // html에서 변수처럼 호출 : 뒤에 () 붙이면 안된다 ex) currentUser\n  // 속도는 computed 빠름\n  computed: {\n    currentUser() {\n      // 공유저장소의 전역변수 (공유변수 : user)\n      // 자동으로 로그인 되었으면 loggedIn = true\n      // 아니면 loggedIn = false, user객체 = null\n      // return this.$route.auth.user;\n      return true; // 테스트용\n    },\n  },\n  // html에서 함수처럼 호출 : 뒤에 () 붙음 ex) logOut(), logOut\n  methods: {\n    logOut() {\n      // dispatch 호출하는 메소드 : actions 있는 메소드를 호출\n      this.$store.dispatch(\"auth/logout\");\n      // 로그아웃 후 이동할 페이지 지정\n      this.$router.push(\"/login\");\n    },\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module"}